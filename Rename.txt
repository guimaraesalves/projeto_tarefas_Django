Criando a primeira aplicação

1) criando a primeira aplicação
No terminal:
$ python manage.py startapp contas
startapp importantissimo

migrates: banco de dados

Ir para o settings.py e registrar a app!
INSTALLED_APPS = [
'contas',
]


2) Criar o  banco de dados:
TERMINAL:
$ python manage.py migrate

3) ver a aplicação rodando pela primeira vez
TERMINAL:
$ python manage.py runserver
ctrl + c --> parar o servidor

4)criar um super usuário para logar na minha aplicação:
atraves da app que ja vem no django chamada admin(settings.py)
TERMINAL
$ python manage.py createsuperuser
$ UserName (leave blank to use 'django'): Mateus
$ email address: alvesguimaraes45@gmail.com
$ Password: 232025
$ Password (again): 232025

5) Testar a aplicação de novo
TERMINAL:
$ python manage.py runserver

6) aonde fica a aplicação?
fica na urls.py:
urlpatterns = [
    path('admin/', admin.site.urls),
]
Vamos no browser e na url digitar:
http://127.0.0.1:8000/admin
todo o gerenciamento do usuario:
novos usuarios, senhas, etc...

 %%%%%%%%%%% show!!!!!
 ENTENDO URL'S:
 A url pergunta para a view, precisamos atualizar na url
 A REQUEST COMEÇA NA URL E DEPOIS VAI PARA VIEW!!!


TEMOS QUE CRIAR UMA VIEW E INDICAR O CAMINHO NO CODIGO ABAIXO
no arquivo urls.py
from django.contrib import admin
from django.urls import path
from .contas.views import <<nome da view criada>>

urlpatterns = [
    path('admin/', admin.site.urls),
]


AULA9 - ENTENDENDO AS VIEWS

VIEW - trecho de código que define o que vai acontecer

link da documentaçaõ:
https://docs.djangoproject.com

7) Na views.py colocamos uma a função:
from django.http import HttpResponse
import datetime

def data(request):
    now = datetime.datetime.now()
    html = "<html><body>It is now %s.</body></html>" % now
    return HttpResponse(html)

    current_datetime ---> colocar na urls


Depois ir no navegador e colocar 127.0.0.1:8000/contas/


AULA 10 - RETORNANDO UM TEMPLATE
alterando a função na views

def data(request):
    now = datetime.datetime.now()
    #html = "<html><body>It is now %s.</body></html>" % now
    return render(request, 'data.html')

    current_datetime ---> colocar na urls

O template data.html não existe temos que criar:
criar uma pasta templates dentro da APP!---contas
e dentro da nova pasta criada TEMPLATES criar uma pasta
com o mesmo nome da APP (contas)

aí coloca nos parametros de retorno:'contas/home.html'
def data(request):
    now = datetime.datetime.now()
    #html = "<html><body>It is now %s.</body></html>" % now
    return render(request, 'contas/data.html')

Dentro da pasta recem criada CONTAS criar o arquivo html
data.html
html:5 + tab

Voltando na urls.py

urlpatterns = [
    path('admin/', admin.site.urls),
    path('data/', data)
]

AULA 11: ENTENDENDO OS MODELS E CRIANDO O SEU PRIMEIRO MODEL
ler e gravar dados
SITE: https://docs.djangoproject.com/en/2.0/topics/db/models/
uma classe em python que escreve e descreve como serao os dados
categorias, uma classe para cada uma colocando os atributos fields,

no arquivo models.py criar uma classe categoria
digita um nome e coloca uma categoria
https://docs.djangoproject.com/en/3.1/ref/forms/fields/


from django.db import models
class Categoria(models.Model):
    nome = models.CharField(max_length=100)
    dt_criacao = models.DateTimeField(auto_now_add=True)

COMO FAZER PARA IR AO BANCO DE DADOS:
CTRL + C = PARAR O SERVIDOR.

TERMINAL:
$ python manage.py makemigrations
cria um arquivo migrations dentro da pasta conta






























